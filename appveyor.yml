version: '0.1.7.{build}'

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

assembly_info:
  patch: true
  file: 'SharpCaster\Properties\AssemblyInfo.cs'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

#---------------------------------#
#    environment configuration    #
#---------------------------------#

init:
  - ps: $env:customBuildVersion = if ($env:APPVEYOR_REPO_TAG -eq $True) { "$env:APPVEYOR_BUILD_VERSION" } else { "$env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_REPO_BRANCH" }
#  - ps: $env:customNugetVersion = if ($env:APPVEYOR_REPO_TAG -eq $True) { "$env:APPVEYOR_BUILD_VERSION" } else { "$env:APPVEYOR_BUILD_VERSION-pre" }
  - ps: Update-AppveyorBuild -Version $env:customBuildVersion

# Build worker image (VM template)
image: Visual Studio 2015

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - '%LocalAppData%\NuGet\Cache'

# # Automatically register private account and/or project AppVeyor NuGet feeds.
# nuget:
#   account_feed: true
#   project_feed: true
#   disable_publish_on_pr: true     # disable publishing of .nupkg artifacts to
#                                   # account/project feeds for pull request builds

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
#platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: SharpCaster.Build.sln      # path to Visual Studio solution or project
  #publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  #publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
  #publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  #include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  #verbosity: quiet|minimal|normal|detailed
  verbosity: normal


# scripts to run before build
before_build:
  - ps: 
  - ps: nuget restore SharpCaster.Build.sln

# # scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
# before_package:

# # scripts to run after build
after_build:
  # build -> publish_nuget: true does not work since SharpCaster.nuspec is not part of a project
#  - ps: nuget pack .\SharpCaster\SharpCaster.nuspec -Version $env:customNugetVersion
  - ps: nuget pack .\SharpCaster\SharpCaster.nuspec -Version $env:customBuildVersion

# # to run your custom scripts instead of automatic MSBuild
# build_script:

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# test:
#   assemblies:
#     - asm1.dll
#     - asm2.dll

#   categories:
#     - UI
#     - E2E

# # to run tests from different categories as separate jobs in parallel
# #test:
# #  categories:
# #    - A            # A category common for all jobs
# #    - [UI]         # 1st job
# #    - [DAL, BL]    # 2nd job

# # scripts to run before tests
# before_test:
#   - echo script1
#   - ps: Write-Host "script1"

# # scripts to run after tests
# after_test:

# # to run your custom scripts instead of automatic tests
# test_script:
#   - echo This is my custom test script

# to disable automatic tests 
test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # # pushing a single file
  # - path: test.zip

  # # pushing a single file with environment variable in path and "Deployment name" specified
  # - path: MyProject\bin\$(configuration)
  #   name: myapp

  # # pushing entire folder as a zip archive
  # - path: logs

  # pushing all *.nupkg files in build directory recursively
  - path: '**\*.nupkg'
    name: Nuget

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

  #   # FTP deployment provider settings
  # - provider: FTP
  #   protocol: ftp|ftps|sftp
  #   host: ftp.myserver.com
  #   username: admin
  #   password:
  #     secure: eYKZKFkkEvFYWX6NfjZIVw==
  #   folder:
  #   application:
  #   active_mode: false
  #   beta: true    # enable alternative FTP library for 'ftp' and 'ftps' modes
  #   debug: true   # show complete FTP log

  #   # Amazon S3 deployment provider settings
  # - provider: S3
  #   access_key_id:
  #     secure: ABcd==
  #   secret_access_key:
  #     secure: ABcd==
  #   bucket: my_bucket
  #   folder:
  #   artifact:
  #   set_public: false

  #   # Azure Blob storage deployment provider settings
  # - provider: AzureBlob
  #   storage_account_name:
  #     secure: ABcd==
  #   storage_access_key:
  #     secure: ABcd==
  #   container: my_container
  #   folder:
  #   artifact:

  #   # Web Deploy deployment provider settings
  # - provider: WebDeploy
  #   server: http://www.deploy.com/myendpoint
  #   website: mywebsite
  #   username: user
  #   password:
  #     secure: eYKZKFkkEvFYWX6NfjZIVw==
  #   ntlm: false
  #   remove_files: false
  #   app_offline: false
  #   do_not_use_checksum: true        # do not use check sum for comparing source and destination files. By default checksums are used.
  #   sync_retry_attempts: 2           # sync attempts, max
  #   sync_retry_interval: 2000        # timeout between sync attempts, milliseconds
  #   aspnet_core: true                # artifact zip contains ASP.NET Core application
  #   aspnet_core_force_restart: true  # poke app's web.config before deploy to force application restart
  #   skip_dirs: \\App_Data
  #   skip_files: web.config
  #   on:
  #     branch: release
  #     platform: x86
  #     configuration: debug

  #   # Deploying to Azure Cloud Service
  # - provider: AzureCS
  #   subscription_id:
  #     secure: fjZIVw==
  #   subscription_certificate:
  #     secure: eYKZKFkkEv...FYWX6NfjZIVw==
  #   storage_account_name: my_storage
  #   storage_access_key:
  #     secure: ABcd==
  #   service: my_service
  #   slot: Production
  #   target_profile: Cloud
  #   artifact: MyPackage.cspkg

    # Deploying to NuGet feed
  - provider: NuGet
    server: https://int.nugettest.org/api/v2/package
    api_key:
      secure: gdPUjRw0zhVPZFSiOOh8lbQJe/Roa8YDJ4TJOz4tYu+bH55Hygtw01prh51hzFq9
    skip_symbols: false
    #symbol_server: https://your.symbol.server/feed
    artifact: /SharpCaster.*\.nupkg/
    #on:
    #  - branch: master                # release from master branch only
    #    appveyor_repo_tag: true       # deploy on tag push only
    #  - branch: dev

  #   # Deploy to GitHub Releases
  # - provider: GitHub
  #   artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
  #   draft: false
  #   prerelease: false
  #   on:
  #     branch: master                # release from master branch only
  #     appveyor_repo_tag: true       # deploy on tag push only

#     # Deploying to a named environment
#   - provider: Environment
#     name: staging
#     on:
#       branch: staging
#       env_var1: value1
#       env_var2: value2

# # scripts to run before deployment
# before_deploy:

# # scripts to run after deployment
# after_deploy:

# # to run your custom scripts instead of provider deployments
# deploy_script:

# to disable deployment
# deploy: off